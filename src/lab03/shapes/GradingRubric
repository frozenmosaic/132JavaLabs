132 Lab Grading Rubric

  25 / 26	- Correctness
		7 / 8 - DrawableObjectList
			Test Name:								Passes	Fails
  			-------------------------------------------------------
			testConstructor							X
			testAddObjects							X
			testRemoveObjects						X
			testDrawCallsDrawOnAll					X
			testDrawNotCalledOnInvisible			X
			testDrawCalledInOrder							X
				* Objects added first are at low indices and should
				  be drawn before object added later. That way the 
				  most recently added objects appear in front of 
				  older objects.
			testScaleAllScaleable					X
			testScaleSomeScaleable					X	
			
		12 / 12 - Shapes
			2 Shapes implement Drawable 
			1 Shape implements Scaleable
			
		6 / 6 - Picture or Animation is Included
			Nice car!

  3 / 3 	- Code Quality
  
  2.5 / 3 	- Documentation / Readability
	* All constructors should have a JavaDoc comment describing
	  the operation of the method, all parameters (with @param tag) and/or
	  return values (with @return tag).  
	    
  2 / 3	- Testing Quality
	* In testAddObj (and other test metods) you make assertions about the
	  objects in the list using their original object references.  For example:
	  	assertEquals(Color.red, obj1.getColor());
	  This does not check the object in the list.  To test that the object is in
	  the correct spot in the list (which is what I think you intend) you would need:
	  	assertEquals(Color.red, objList.getDrawableObject(2).getColor());
	  Which requires adding a getDrawableObject method to the class.
	  
	* When testing removeDrawable it would be better to test removing objects 
	  from several different points in the list.  For example, if you only test removing 
	  from the last spot in the list your test would not detect a bug in which
	  the method always removes the last element rather than the desired element.

	* When testing the scaleAll method it would be better to test it on a list 
	  that contains some Scaleable objects and some that are not Scaleable. If the
	  list contains no non-Scaleable objects the test cannot detect a bug in which
	  the scale method simply tries to scale every element of the list, rather than
	  just the Scaleable ones.
	  	  
  0 / 0 	- Bonus Features
  		x/1 - Add and test methods for z-order to DrawableObjectList
  		x/2 - Use 2 javax.swing.timers and 2 ActionListeners to animate 2 shapes
  		x/2 - Test the drawAll method (use mock object in test)
  		x/5 - Create Rotatable Interface and make one shape Rotatable
=====
 
  32.5 / 35	- Total Score
  93%
  
=====